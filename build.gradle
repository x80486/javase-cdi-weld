import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

import java.nio.charset.StandardCharsets

plugins {
  id("io.freefair.lombok")
  id("org.gradle.eclipse")
  id("org.gradle.idea")
  id("org.gradle.java")
}

// apply from: "another.gradle"
// apply plugin: "tld.plugin-identifier"

group = "org.acme"
version "0.1.0-SNAPSHOT"

configurations.all {
  // exclude module: "org.junit"
  resolutionStrategy {
    failOnNonReproducibleResolution()
  }
}

repositories {
  // mavenLocal() // Uncomment when needed
  // maven { url = "${project.property("artifactory.url")}/namespace/jcenter" }
  jcenter()
}

dependencies {
  //-----------------------------------------------------------------------------------------------
  //  Experimental Dependencies
  //-----------------------------------------------------------------------------------------------

  // implementation("org.jboss.weld.se:weld-se-core:4.0.0.Final")
  implementation("org.jboss.weld.se:weld-se-shaded:4.0.0.Final")

  testImplementation("org.jboss.weld:weld-junit5:2.0.2.Final")

  // testRuntimeOnly("javax:javaee-api:8.0.1")
  // testRuntimeOnly("javax:javaee-api:7.0  ")

  //-----------------------------------------------------------------------------------------------
  //  BOM Support
  //-----------------------------------------------------------------------------------------------

  implementation(enforcedPlatform("org.apache.logging.log4j:log4j-bom:2.14.0"))

  testImplementation(enforcedPlatform("org.junit:junit-bom:5.7.1"))

  //-----------------------------------------------------------------------------------------------
  //  Project Dependencies
  //-----------------------------------------------------------------------------------------------

  implementation("com.lmax:disruptor:3.4.2")
  implementation("org.apache.commons:commons-lang3:3.11")
  implementation("org.apache.logging.log4j:log4j-1.2-api")
  implementation("org.apache.logging.log4j:log4j-jcl")
  implementation("org.apache.logging.log4j:log4j-jul")
  implementation("org.apache.logging.log4j:log4j-slf4j-impl")
  implementation("org.hibernate:hibernate-entitymanager:5.4.28.Final")

  runtimeOnly("com.h2database:h2:1.4.200")

  //-----------------------------------------------------------------------------------------------
  //  Test Dependencies
  //-----------------------------------------------------------------------------------------------

  testImplementation("nl.jqno.equalsverifier:equalsverifier:3.5.4")
  testImplementation("org.assertj:assertj-core:3.19.0")
  testImplementation("org.junit.jupiter:junit-jupiter-params")
  testImplementation("org.mockito:mockito-junit-jupiter:3.7.7")

  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

//=================================================================================================
//  P L U G I N S
//=================================================================================================

java {
  consistentResolution {
    useCompileClasspathVersions()
  }
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

lombok {
  config["lombok.log.fieldIsStatic"] = "false"
  config["lombok.log.fieldName"] = "logger"
  version = "1.18.18"
}

//=================================================================================================
//  T A S K S
//=================================================================================================

tasks.withType(JavaCompile) {
  options.compilerArgs << "-parameters"
  options.encoding = "${StandardCharsets.UTF_8}"
}

tasks.withType(Test) {
  // doFirst {
  //   copy {
  //     from "${project.buildDir}/resources/main/META-INF/beans.xml"
  //     into "${project.buildDir}/classes/main/META-INF/"
  //   }
  //   copy {
  //     from "${project.buildDir}/resources/test/META-INF/beans.xml"
  //     into "${project.buildDir}/classes/test/META-INF/"
  //   }
  // }
  testLogging {
    events = [TestLogEvent.FAILED, TestLogEvent.SKIPPED]
    exceptionFormat = TestExceptionFormat.FULL
    showCauses = true
    showExceptions = true
    showStackTraces = true
  }
  useJUnitPlatform()
}

//-------------------------------------------------------------------------------------------------
//  Custom Tasks
//-------------------------------------------------------------------------------------------------
